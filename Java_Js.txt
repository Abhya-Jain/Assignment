JAVA

A. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.

import java.util.Random;

public class Shuffle {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(array);
        for (int value : array) {
            System.out.print(value + " ");
        }
    }

    public static void shuffleArray(int[] arr) {
        Random rand = new Random();

        for (int i = 0; i < arr.length; i++) {
            int randomIndex = rand.nextInt(arr.length);

            int temp = arr[i];
            arr[i] = arr[randomIndex];
            arr[randomIndex] = temp;
        }
    }



B. Enter a Roman Number as input and convert it to an integer. (ex IX = 9)

import java.util.HashMap;

public class RomanToInteger {
    public static void main(String[] args) {
        String romanNumeral = "IX";
        int result = romanToInt(romanNumeral);
        System.out.println("Roman numeral " + romanNumeral + " is equal to " + result);
    }

    public static int romanToInt(String s) {
        HashMap<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            char currentChar = s.charAt(i);
            int currentValue = romanValues.get(currentChar);

            if (currentValue < prevValue) {
                result -= currentValue;
            } else {
                result += currentValue;
            }

            prevValue = currentValue;
        }

        return result;
    }
}


C. Check if the input is pangram or not. (Pangram is a sentence that contains all the alphabet
from a-z)

public class PangramChecker {
    public static void main(String[] args) {
        String sentence = "The quick brown fox jumps over the lazy dog";
        boolean isPangram = isPangram(sentence);
        
        if (isPangram) {
            System.out.println("The sentence is a pangram.");
        } else {
            System.out.println("The sentence is not a pangram.");
        }
    }

    public static boolean isPangram(String sentence) {
        
        boolean[] alphabetPresent = new boolean[26];
       
        sentence = sentence.toLowerCase();

        // Iterate through the characters in the sentence.
        for (int i = 0; i < sentence.length(); i++) {
            char c = sentence.charAt(i);
            if (c >= 'a' && c <= 'z') {
                alphabetPresent[c - 'a'] = true;
            }
        }

        for (boolean present : alphabetPresent) {
            if (!present) {
                return false; // If any letter is missing, it's not a pangram.
            }
        }
        return true; // All letters are present; it's a pangram.
    }
}

JAVASCRIPT- 


A. Take a sentence as an input and reverse every word in that sentence.
a. Example - This is a sunny day > shiT si a ynnus yad.

function reverseWords(sentence) {
   
    const words = sentence.split(' ');

    const reversedWords = words.map(word => reverseWord(word));

    const reversedSentence = reversedWords.join(' ');

    return reversedSentence;
}

function reverseWord(word) {
 
    return word.split('').reverse().join('');
}

const inputSentence = "This is a sunny day";
const reversedSentence = reverseWords(inputSentence);

console.log(reversedSentence); // Output: "sihT si a ynnus yad"


B. Perform sorting of an array in descending order.

function sortDescending(arr) {
    return arr.sort(function(a, b) {
        
        return b - a;
    });
}

const numbers = [5, 2, 9, 1, 5, 6];
const descendingNumbers = sortDescending(numbers);

console.log(descendingNumbers); // Output: [9, 6, 5, 5, 2, 1]
